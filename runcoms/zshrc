#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

#
# WINE
#
WINEPREFIX="$HOME/.wine32"

#
# Fasd
#
# eval "$(fasd --init posix-alias zsh-hook zsh-ccomp zsh-ccomp-install zsh-wcomp zsh-wcomp-install)"
fasd_cache="$HOME/.fasd-init-zsh"
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init posix-alias zsh-hook zsh-ccomp zsh-ccomp-install zsh-wcomp zsh-wcomp-install >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache


#
# Pyenv
#
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"


#
# Rust
#
export PATH="$HOME/.cargo/bin:$PATH"
if [[ -s "$HOME/.cargo/env" ]]; then
    source "$HOME/.cargo/env"
fi


#
# Direnv
#
eval "$(direnv hook zsh)"
# venv python prompt
setopt PROMPT_SUBST

show_virtual_env() {
  if [[ -n "$VIRTUAL_ENV" && -n "$DIRENV_DIR" ]]; then
    echo "($(basename $VIRTUAL_ENV))"
  fi
}
PS1='$(show_virtual_env)'$PS1

#
# sdkman
#
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/bameda/.sdkman"
[[ -s "/home/bameda/.sdkman/bin/sdkman-init.sh" ]] && source "/home/bameda/.sdkman/bin/sdkman-init.sh"


#
# grc
#
#for cmd in g++ gas head make ld ping6 tail traceroute6 $( ls /usr/share/grc/ ); do
#  cmd="${cmd##*conf.}"
#  type "${cmd}" >/dev/null 2>&1 && alias "${cmd}"="$( which grc ) --colour=auto ${cmd}"
#done

#
# Alias
#
alias diff='diff --color=auto'
alias tree='tree --dirsfirst'
alias exa='exa --group-directories-first'
alias vi="nvim"
alias vim="nvim"
alias paca="pikaur"
alias paco="paru"
alias kssh="kitty +kitten ssh" # https://sw.kovidgoyal.net/kitty/faq/#i-get-errors-about-the-terminal-being-unknown-or-opening-the-terminal-failing-when-sshing-into-a-different-computer
alias pytest='python -m pytest -s --tb=native'
alias pytest.nomgrs="python -m pytest -s --tb=native --nomigrations"
alias pytest.nowarn="python -m pytest -s --tb=native -p no:warnings"

alias battery-statu='upower -i /org/freedesktop/UPower/devices/battery_BAT0| grep -E "state|to\ full|percentage"'
alias docker-remove-all-containers="docker ps -aq | xargs docker stop && docker ps -aq | xargs docker rm"

alias kaleidos-vpm-start="sudo systemctl start wg-quick@kaleidos0.service"
alias kaleidos-vpm-status="sudo systemctl status wg-quick@kaleidos0.service"
alias kaleidos-vpm-stop="sudo systemctl stop wg-quick@kaleidos0.service"


# This is the end
neofetch

autoload -Uz compinit
zstyle ':completion:*' menu select
fpath+=~/.zfunc

# >>>> Vagrant command completion (start)
fpath=(/opt/vagrant/embedded/gems/2.2.16/gems/vagrant-2.2.16/contrib/zsh $fpath)
compinit
# <<<<  Vagrant command completion (end)

# kubectl completion (start)
# get zsh complete kubectl
source <(kubectl completion zsh)
alias kubectl=kubecolor
# make completion work with kubecolor
compdef kubecolor=kubectl
# kubectl completion (end)
